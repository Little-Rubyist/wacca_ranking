.container
  %h1 楽曲詳細
  .row.justify-content-between.m-3
    .col
      - if @user_song.is_favorite
        = button_to 'お気に入り解除', { controller: 'user_songs', action: 'toggle_favorite' }, method: :put, params: {id: @user_song.id}, class: 'btn btn-secondary'
      - else
        = button_to 'お気に入りする', { controller: 'user_songs', action: 'toggle_favorite' }, method: :put, params: {id: @user_song.id}, class: 'btn btn-primary'
    .col-auto
      = button_to '追加', new_user_score_path, method: :get, params: {user_song_id: @user_song.id}, class: 'btn btn-primary'
  .row
    .col-lg-4
      = image_tag "master/songs/#{@song.music_id}.png"
    .col
      %ul.list-group
        %li.list-group-item タイトル：#{@song.title}
        %li.list-group-item ジャンル：#{Song.human_attribute_enum_value(:genre, @song.genre)}
        %li.list-group-item レベル：#{Song.human_attribute_enum_value(:diff_type, @song.diff_type)}
        %li.list-group-item 難易度：#{@song.difficulty}

  %h3 スコア履歴

  .table-responsive
    %table.table
      %thead
        %tr
          %th{scope: 'col'} 登録日時
          %th{scope: 'col'} スコア
          %th{scope: 'col'} FC
          %th{scope: 'col'}
      %tbody
        - @scores.each do |score|
          %tr
            %td #{score.created_at}
            %td #{score.score}
            %td #{show_archive_text(score)}
            %td
              = button_to '削除', user_score_path(score), method: :delete, data: {confirm: '本当に削除しますか？'}, class: 'btn btn-sm btn-danger'